---
title: "Utilisation de OrcaSlicer avec Forge Adventurer M5 Pro"
subtitle: "Tutoriel pour l'impression 3D avec PLA"
email: "e2583u@univ-lorraine.fr"
institute: "Universit√© de Lorraine | ENSGSI"
author: 
  - "Paola"
date: 30-01-2025

format:
  revealjs:
    footer: 'Tutoriel 1: Comment utiliser OrcaSlicer'
    header: 'Utilisation OrcaSlicer pour Forge Adventurer M5 Pro'

---

# ‚öôÔ∏è Installer le logiciel Arduino (IDE)

1. Va sur le site officiel : [arduino.cc/software](https://www.arduino.cc/en/software)  
2. T√©l√©charge la version pour ton syst√®me (Windows, Mac, Linux)  
3. Installe et accepte les drivers  
4. Ouvre le logiciel Arduino  

---

# üîå Connecter la carte Arduino

1. Branche la carte avec un c√¢ble USB  
2. Dans Arduino IDE :
   - **Outils > Type de carte > Arduino Nano**
   - **Outils > Port > COM3** (ou autre selon l‚Äôappareil)

::: {.callout-note}
**üí° Astuce :**
Pour identifier le bon port COM :
- Windows + X > *Gestionnaire de p√©riph√©riques*
- Regarde sous *Ports (COM & LPT)*
- Nom comme **USB-SERIAL CH340**
:::

![](figures/7.png)

---

# üß© Installer le driver CH340

Pour clones Arduino :

- Windows : [T√©l√©charger](https://sparks.gogo.co.nz/assets/_site_/downloads/CH34x_Install_Windows_v3_4.zip)  
- Mac : [GitHub driver](https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver)

---

# üß± Installer les biblioth√®ques

1. **Croquis > Inclure une biblioth√®que > G√©rer les biblioth√®ques...**  
2. Rechercher **Servo** et installer la biblioth√®que officielle

---

# üîß Mat√©riel n√©cessaire

| √âl√©ment                  | Quantit√© | Notes                      |
|--------------------------|----------|----------------------------|
| Carte Arduino Nano       | 1        | Compatible IDE             |
| C√¢ble USB-A > USB-B      | 1        | Connexion Arduino          |
| Breadboard               | 1        | Connexion facile           |
| C√¢bles Dupont M-M        | ~20      | Liaison Arduino-breadboard |
| LED                      | 1        |                            |
| R√©sistance 220Œ©          | 1        | Protection LED             |
| Bouton-poussoir          | 1        | D√©clencheur                |
| R√©sistance 10kŒ©          | 1        | Pull-down pour le bouton   |
| Moteurs DC (5V)          | 2        |                            |
| Module L298N             | 1        | Contr√¥le moteurs           |
| Servomoteur MG995        | 1        | 5V                         |
| Piles lithium 3.7V x2    | 1        | Alimentation externe       |
| Alim. optionnelle (AA x6)| 1        | Bloc ou pack piles         |

---

# ‚ö° Connexion des composants

### ‚úÖ LED  
- + ‚Üí R√©sistance 220Œ© ‚Üí D2  
- ‚Äì ‚Üí GND

### ‚úÖ Bouton  
- Une patte ‚Üí 5V  
- Autre ‚Üí D3 + R√©sistance 10kŒ© ‚Üí GND

### ‚úÖ Servomoteur SG90  
- Marron ‚Üí GND  
- Rouge ‚Üí 5V  
- Orange ‚Üí D9

### ‚úÖ Moteurs via L298N  
- IN1 ‚Üí D5  
- IN2 ‚Üí D6  
- ENA/ENB ‚Üí 5V  
- GND L298N ‚Üí GND Arduino  
- VIN L298N : 9V

---

# üíª Exemple de Code Arduino

‚úîÔ∏è LED clignote, moteur tourne, servo pivote avec un bouton :

```cpp
#include <Servo.h>

Servo monServo;
int bouton = 3;
int led = 2;
int moteur1 = 5;
int moteur2 = 6;

void setup() {
  pinMode(bouton, INPUT);
  pinMode(led, OUTPUT);
  pinMode(moteur1, OUTPUT);
  pinMode(moteur2, OUTPUT);
  monServo.attach(9);
}

void loop() {
  if (digitalRead(bouton) == HIGH) {
    digitalWrite(led, HIGH);
    digitalWrite(moteur1, HIGH);
    digitalWrite(moteur2, LOW);
    monServo.write(90);
    delay(1000);
    digitalWrite(led, LOW);
    digitalWrite(moteur1, LOW);
    digitalWrite(moteur2, LOW);
    monServo.write(0);
  }
}
