---
title: "Automatisation de CV avec Google Drive"
subtitle: "Un guide pas à pas pour optimiser vos candidatures"
format:
  revealjs:
    title-slide-attributes:
      data-state: "hide-menubar"
    center: true
    theme: white
    transition: slide
    background-transition: fade
    controls-layout: bottom-right
    menu: false
    css: "css/style.css"
    section-divs: true
    simplemenu:
      barhtml:
        header: "<div class='menubar'><ul class='menu'></ul><div>"
      scale: 0.67
revealjs-plugins:
  - simplemenu
---

# Pourquoi automatiser l'envoi de CV ? {data-stack-name="AutomatisationCV"}

## Introduction  
Imaginez personnaliser vos CV et lettres de motivation pour chaque candidature sans effort manuel. Grâce à **Google Apps Script**, vous pouvez automatiser ce processus et économiser du temps.

---

## Qu'est-ce que Google Apps Script ?  
Google Apps Script est une plateforme de script intégrée à Google, permettant des automatisations comme :  
- Personnalisation de documents  
- Conversion en PDF  
- Envoi d'emails automatisé  

---

## Prérequis pour ce tutoriel  
1. **Google Docs** : Modèle de lettre de motivation  
2. **Google Sheets** : Base de données des entreprises et informations spécifiques  
3. **Google Drive** : Dossier pour stocker les fichiers PDF générés  

---

## Étape 1 : Créer un modèle dans Google Docs  

1. **Ouvrez Google Docs et créez un document**.  
2. Ajoutez votre contenu standard pour la lettre de motivation.  
3. Insérez des mots-clés entre chevrons (`<<>>`) pour personnalisation, par exemple :  
   - `<<ENTREPRISE>>`  
   - `<<POSTE>>`  
   - `<<RECRUTEUR>>`  

Exemple de contenu :  

```text
[Votre Adresse]
<<LIEU>>
<<DATE>>
À l’attention de <<RECRUTEUR>>
[Adresse de l’entreprise]
<<ENTREPRISE>>
Objet : Candidature au poste de <<POSTE>>

Cher/Cher(e) <<RECRUTEUR>>,
...
[Votre Prénom et Nom]

## Étape 2 : Créer une base de données dans Google Sheets

1. Créez un fichier **Google Sheets**.
2. Renommez l'onglet principal en `h1`.
3. Ajoutez les colonnes suivantes dans la première ligne :  

| Entreprise  | Recruteur  | Lieu  | Date        | Poste       | Compétences   | Email          | Infos supplémentaires |
|-------------|------------|-------|-------------|-------------|---------------|----------------|------------------------|
| Google      | M. Dupont  | Paris | 17/11/2024  | Ingénieur   | Programmation | dupont@gmail.com | Innovation            |

4. **Remplissez les informations spécifiques** à chaque entreprise dans les lignes suivantes.

---

## Étape 3 : Configurer Apps Script

1. **Ouvrir Apps Script** :
   - Dans Google Sheets, cliquez sur **Extensions > Apps Script**.
2. **Collez le code suivant :**

```javascript
// Configuration
var dossierDestinationId = "ICI-REMPLACEZ-AVEC-ID-DOSSIER"; // ID du dossier Google Drive
const ID_MODELE = "ICI-REMPLACEZ-AVEC-ID-MODELE"; // ID du modèle Google Docs
var classeur = SpreadsheetApp.getActiveSpreadsheet(); 
var feuille = classeur.getSheetByName("h1");

// Fonction principale
function initialiser() {
  var donnees = feuille.getDataRange().getValues();
  donnees.shift(); // Enlever les titres
  donnees.forEach((ligne, index) => {
    creerPDF(ligne, index + 2);
  });
}

// Créer un PDF
function creerPDF(donnees, ligne) {
  var [entreprise, recruteur, lieu, date, poste, competences, email, infos] = donnees;
  var copieModele = DriveApp.getFileById(ID_MODELE).makeCopy();
  var document = DocumentApp.openById(copieModele.getId());

  // Remplacer les mots-clés
  document.getBody().replaceText("<<ENTREPRISE>>", entreprise);
  document.getBody().replaceText("<<RECRUTEUR>>", recruteur);
  document.getBody().replaceText("<<LIEU>>", lieu);
  document.getBody().replaceText("<<DATE>>", date);
  document.getBody().replaceText("<<POSTE>>", poste);
  document.getBody().replaceText("<<COMPETENCES>>", competences);
  document.saveAndClose();

  // Convertir en PDF
  var fichierPDF = copieModele.getAs("application/pdf");
  var dossier = DriveApp.getFolderById(dossierDestinationId);
  dossier.createFile(fichierPDF);

  // Nettoyer
  copieModele.setTrashed(true);
}